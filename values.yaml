# Default values for lingochat.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
nginx:
  component: nginx
  image:
    repository: haeseung/lingo-chat.amd64
    # This sets the pull policy for images.
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: latest
  service:
    type: ClusterIP
    port: 80
  storage:
    nfs:
      server: 10.178.0.3
      path: /home/lingochat
      size: 200Mi
  volumeMounts:
    - name: nfs-volume
      mountPath: "/usr/share/nginx/html"
  volumes:
    - name: nfs-volume
      persistentVolumeClaim:
        claimName: nfs-pvc

socket:
  component: socket
  image:
    repository: haeseung/socket-server.amd64
    pullPolicy: Always
    tag: latest
  service:
    type: ClusterIP
    port: 3090
    targetPort: 3080
  config:
    SERVER_PORT: ""
    REDIS_HOST: ""
    REDIS_PORT: ""
    REDIS_DB: ""
    API_SERVER_URL: ""

api:
  component: api
  serviceAccountName: api-account
  image:
    repository: haeseung/lingo-api-server.amd64
    pullPolicy: Always
    tag: latest
  service:
    type: ClusterIP
    port: 3030
    targetPort: 3000
  vault:
    enabled: true
    secretPath: ""
  config:
    SERVER_PORT: ""
    POSTGRESQL_HOST: ""
    POSTGRESQL_PORT: ""
    POSTGRESQL_DATABASE: ""
    POSTGRESQL_SYNCHRONIZE: ""
    POSTGRESQL_LOGGING: ""
    REDIS_CACHE_HOST: ""
    REDIS_CACHE_PORT: ""
    REDIS_CACHE_DB: ""
    REACT_APP_BASE: ""
    OAUTH_GOOGLE_REDIRECT: ""
    SOCKET_SERVER_URL: ""
    JWT_ACCESS_EXPIRATION_TIME: "3600" # 1 hour
    JWT_REFRESH_EXPIRATION_TIME: "604800" # 1 week

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
#service:
# This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
#  type: ClusterIP
# This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
#  port: 80

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  host: ""
  annotations:
    nginx.ingress.kubernetes.io/websocket-services: lingo-socket-svc:3090
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/use-regex: "true"
  nginxServiceName: lingo-nginx-svc
  apiServiceName: lingo-api-svc
  socketServiceName: lingo-socket-svc

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
